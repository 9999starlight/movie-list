{"version":3,"sources":["components/layout/Header.js","components/layout/Loader.js","Firebase.js","components/search/MovieDetails/MovieDetails.js","components/search/SingleMovieBox/SingleMovieBox.js","components/search/RenderResults/RenderResults.js","components/search/SearchInput/SearchInput.js","components/search/SearchContainer/SearchContainer.js","components/search/MoviesList/MoviesList.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","id","to","Loader","app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","MovieDetails","state","singleMovieDetails","loading","dataResponse","getMovieDetails","showLoader","axios","get","Object","values","props","join","then","res","data","Response","hideloader","setState","catch","err","console","log","message","addMovieToList","collection","where","imdbID","snapshot","docs","length","alert","add","favorite","genre","Genre","imdbLink","imdbRate","imdbRating","movieId","title","Title","type","Type","year","Year","image","Poster","this","prevProps","prevState","href","rel","target","src","alt","onClick","scroll","el","scrollIntoView","behavior","block","icon","faHandPointUp","Actors","Awards","Runtime","Country","Plot","Writer","Director","React","Component","SingleMovieBox","on","toggle","movie","faAngleDoubleDown","RenderResults","movieSearchResult","map","index","key","searchValue","SearchInput","onChange","e","value","onKeyUp","preventDefault","getMovies","autoFocus","placeholder","SearchContainer","Search","MoviesList","fetchedDatabase","snapshotFunction","moviesArr","forEach","doc","film","dbId","push","fetchMoviesCollection","sortByAbc","orderBy","sortByRating","getUpdatedData","deleteItem","parentElement","getAttribute","delete","addToFavorites","update","disabled","window","confirm","App","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.241ce4a4.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './Header.css'\r\nfunction Header() {\r\n    return (\r\n        <header className=\"flex p1\" id=\"nav\">\r\n            <h4>Movie List</h4>\r\n            <nav className=\"flexCenter\">\r\n                <ul className=\"navUl flex\">\r\n                    <li>\r\n                        <Link to=\"/\">Search</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/movies_list/\">My List</Link>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\nexport default Header","import React from 'react'\r\nimport './Loader.css'\r\n\r\nfunction Loader() {\r\n  return (\r\n    <div className=\"loaderContainer flex flexCenter\">\r\n      <div className=\"loader\">\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Loader","import app from 'firebase/app';\r\nimport 'firebase/firestore';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAmjtwJhPPoQjHg-o_EjC-aiSCtmGzJtzQ\",\r\n  authDomain: \"movie-list-3d942.firebaseapp.com\",\r\n  databaseURL: \"https://movie-list-3d942.firebaseio.com\",\r\n  projectId: \"movie-list-3d942\",\r\n  storageBucket: \"movie-list-3d942.appspot.com\",\r\n  messagingSenderId: \"1080619382778\",\r\n  appId: \"1:1080619382778:web:76dafc6c33618e08ba5643\",\r\n  measurementId: \"G-LQSSR2GBPF\"\r\n};\r\n\r\napp.initializeApp(firebaseConfig);\r\nconst db = app.firestore();\r\n\r\nexport { db };","import React from 'react';\r\nimport Loader from '../../layout/Loader';\r\nimport axios from 'axios'\r\nimport { HashLink } from 'react-router-hash-link';\r\nimport { db } from '../../../Firebase.js'\r\nimport './MovieDetails.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faHandPointUp } from '@fortawesome/free-solid-svg-icons'\r\n\r\nclass MovieDetails extends React.Component {\r\n    state = {\r\n        singleMovieDetails: [],\r\n        loading: false,\r\n        dataResponse: true\r\n    }\r\n    showLoader() {\r\n        this.setState({ loading: true })\r\n    }\r\n\r\n    hideloader() {\r\n        this.setState({ loading: false })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getMovieDetails()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.singleMovieDetails !== this.props.singleMovieDetails)\r\n            this.setState({ singleMovieDetails: this.props.singleMovieDetails })\r\n    }\r\n\r\n    getMovieDetails = () => {\r\n        this.showLoader()\r\n        axios.get(`http://www.omdbapi.com/?i=${Object.values(this.props).join('')}&apikey=a56835b9`)\r\n            .then(res => {\r\n                if (res.data.Response !== \"False\") {\r\n                    this.hideloader()\r\n                    this.setState({ singleMovieDetails: res.data, dataResponse: true })\r\n                } else {\r\n                    this.setState({ dataResponse: false })\r\n                }\r\n            }).catch(err => {\r\n                console.log(err.message);\r\n            })\r\n    }\r\n\r\n    // check if item already exists; addMovie to Firebase movies collection\r\n    addMovieToList = () => {\r\n        db.collection('movies').where('movieId', '==', this.state.singleMovieDetails.imdbID).get()\r\n            .then(snapshot => {\r\n                if (snapshot.docs.length) {\r\n                    alert('You have already added that item to the list!')\r\n                } else {\r\n                    db.collection('movies').add({\r\n                        favorite: false,\r\n                        genre: this.state.singleMovieDetails.Genre,\r\n                        imdbLink: `https://www.imdb.com/title/${Object.values(this.props).join('')}`,\r\n                        imdbRate: this.state.singleMovieDetails.imdbRating,\r\n                        movieId: this.state.singleMovieDetails.imdbID,\r\n                        title: this.state.singleMovieDetails.Title,\r\n                        type: this.state.singleMovieDetails.Type,\r\n                        year: this.state.singleMovieDetails.Year,\r\n                        image: this.state.singleMovieDetails.Poster\r\n                    })\r\n                    alert(`Added to your list`);\r\n                }\r\n            }).catch((err) => {\r\n                console.log(err.message);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"detailsContainer radius\">\r\n                {(this.state.loading) ? <Loader /> : null}\r\n                {this.state.dataResponse ?\r\n                    <div className=\"film\">\r\n                        <div className=\"info-poster radius\">\r\n                            <a href={this.state.singleMovieDetails.Poster} rel=\"noopener noreferrer\" target=\"_blank\">\r\n                                <img src={this.state.singleMovieDetails.Poster} alt=\"film poster\" className=\"block biggerImage\" /></a>\r\n                            <div className=\"singleMovie\">\r\n                                <h2>{this.state.singleMovieDetails.Title}</h2>\r\n                                <h3>Year: {this.state.singleMovieDetails.Year}</h3>\r\n                                <h3>Type: {this.state.singleMovieDetails.Type}</h3>\r\n                                <h3>Genre: {this.state.singleMovieDetails.Genre}</h3>\r\n                                <h3>IMDB Rating: {this.state.singleMovieDetails.imdbRating}</h3>\r\n                                <button className=\"btn addMovieBtn radius\" onClick={this.addMovieToList}>\r\n                                    Add to watchlist</button>\r\n                                <HashLink\r\n                                    to=\"/#nav\"\r\n                                    scroll={el => el.scrollIntoView({ behavior: 'smooth', block: 'end' })}\r\n                                    className=\"topLink\">Back To Top &nbsp; <FontAwesomeIcon icon={faHandPointUp} className=\"handIcon\" /></HashLink >\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"otherDetails flex\">\r\n                            <h4><strong>Actors:</strong> {this.state.singleMovieDetails.Actors}</h4>\r\n                            <h4><strong>Awards:</strong> {this.state.singleMovieDetails.Awards}</h4>\r\n                            <h4><strong>Runtime:</strong> {this.state.singleMovieDetails.Runtime}</h4>\r\n                            <h4><strong>Country:</strong> {this.state.singleMovieDetails.Country}</h4>\r\n                            <p><strong>Plot:</strong> {this.state.singleMovieDetails.Plot}</p>\r\n                            <h4><strong>Writer:</strong> {this.state.singleMovieDetails.Writer}</h4>\r\n                            <h3><strong>Director:</strong> {this.state.singleMovieDetails.Director}</h3>\r\n                        </div>\r\n                    </div>\r\n                    : <div><h3>No details available!</h3></div>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MovieDetails;","import React from 'react'\r\nimport MovieDetails from '../MovieDetails/MovieDetails'\r\nimport './SingleMovieBox.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faAngleDoubleDown } from '@fortawesome/free-solid-svg-icons'\r\n\r\nclass SingleMovieBox extends React.Component {\r\n    state = {\r\n        on: false\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            on: !this.state.on\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"movieBoxWrapper\">\r\n                <div className=\"movieBox p1 grid radius\">\r\n                    <img src={this.props.movie.Poster} alt=\"film poster\" className=\"block smallImage shadow\" />\r\n                    <div className=\"movieInfo flex\">\r\n                        <p className=\"movieTitle\">{this.props.movie.Title}</p>\r\n                        <p className=\"movieYear\">Year: {this.props.movie.Year}</p>\r\n                        <p className=\"movieType\">Type: {this.props.movie.Type}</p>\r\n                    </div>\r\n                    <div onClick={this.toggle} className=\"btnDetailsWrapper flex flexCenter\"><p className=\"detailsText\">More details</p><p className=\"arrow\"><FontAwesomeIcon icon={faAngleDoubleDown} /></p></div>\r\n                </div>\r\n                {this.state.on && <MovieDetails {...this.props.movie.imdbID} />}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SingleMovieBox;","import React from 'react';\r\nimport SingleMovieBox from '../SingleMovieBox/SingleMovieBox';\r\nimport PropTypes from 'prop-types'\r\nimport './RenderResults.css';\r\nclass RenderResults extends React.Component {\r\n    state = {\r\n        movieSearchResult: this.props.movieSearchResult\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.movieSearchResult !== this.props.movieSearchResult)\r\n            this.setState({ movieSearchResult: this.props.movieSearchResult })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"renderResult\">\r\n                {this.state.movieSearchResult.map((movie, index) => {\r\n                    return <SingleMovieBox key={index} movie={movie} searchValue={this.props.searchValue} />\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nRenderResults.propTypes = {\r\n    movieSearchResult: PropTypes.array.isRequired\r\n}\r\n\r\nexport default RenderResults;","import React from 'react'\r\nimport './SearchInput.css'\r\n\r\nclass SearchInput extends React.Component {\r\n    state = {\r\n        searchValue: ''\r\n    }\r\n\r\n    onChange = (e) => this.setState({ searchValue: e.target.value })\r\n\r\n    onKeyUp = (e) => {\r\n        e.preventDefault()\r\n        this.props.getMovies(this.state.searchValue)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"searchBox flex flexCenter p1\" >\r\n                <div className=\"search\" >\r\n                    <h1 className=\"mb1\">Search for movies or tv shows</h1>\r\n                    <h3 className=\"mb1\">Add movies to watchlist and mark your favorites</h3>\r\n                    <div className=\"flexCenter\">\r\n                        <input type=\"text\" id=\"search\" className=\"radius mb1 searchArea shadow\"\r\n                            value={this.state.searchValue}\r\n                            onChange={this.onChange}\r\n                            autoFocus\r\n                            placeholder=\"Enter title or keyword\"\r\n                            onKeyUp={this.onKeyUp} />\r\n                        <p>Start typing to search...</p>\r\n                    </div>\r\n                </div >\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchInput;","import React from 'react'\r\nimport RenderResults from '../RenderResults/RenderResults'\r\nimport SearchInput from '../SearchInput/SearchInput'\r\nimport Loader from '../../layout/Loader'\r\nimport axios from 'axios'\r\n\r\nclass SearchContainer extends React.Component {\r\n  state = {\r\n    movieSearchResult: [],\r\n    loading: false,\r\n    dataResponse: true\r\n  }\r\n\r\n  showLoader() {\r\n    this.setState({ loading: true })\r\n  }\r\n\r\n  hideloader() {\r\n    this.setState({ loading: false })\r\n  }\r\n\r\n  getMovies = (searchValue) => {\r\n    this.showLoader()\r\n    axios.get(`http://www.omdbapi.com/?s=${searchValue}&apikey=a56835b9`)\r\n      .then(res => {\r\n        this.hideloader()\r\n        if (res.data.Response !== \"False\") {\r\n          this.setState({ movieSearchResult: res.data.Search, dataResponse: true })\r\n        } else {\r\n          this.setState({ dataResponse: false })\r\n        }\r\n      }).catch(err => {\r\n        console.log(err.message);\r\n      })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"p1\" id=\"startSearch\">\r\n        <SearchInput getMovies={this.getMovies} />\r\n        {(this.state.loading) ? <Loader /> : null}\r\n        {this.state.dataResponse ? <RenderResults movieSearchResult={this.state.movieSearchResult} searchValue={this.state.searchValue} /> : <div><h3>Searching for title or movie not found!</h3></div>}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SearchContainer;","import React from 'react';\r\nimport { db } from './../../../Firebase.js'\r\nimport './MoviesList.css'\r\nimport { HashLink } from 'react-router-hash-link';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faHandPointUp } from '@fortawesome/free-solid-svg-icons'\r\n\r\nclass MoviesList extends React.Component {\r\n\r\n    state = {\r\n        fetchedDatabase: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchMoviesCollection()\r\n    }\r\n\r\n    // firebase realtime (snapshot) functions for fetching and sorting data\r\n    snapshotFunction = (snapshot, moviesArr) => {\r\n        snapshot.docs.forEach(doc => {\r\n            const film = doc.data()\r\n            film.dbId = doc.id\r\n            moviesArr.push(film)\r\n        })\r\n        this.setState({\r\n            fetchedDatabase: moviesArr\r\n        })\r\n    }\r\n\r\n    fetchMoviesCollection = () => {\r\n        const moviesArr = []\r\n        db.collection('movies').get()\r\n            .then((snapshot) => {\r\n                this.snapshotFunction(snapshot, moviesArr)\r\n            }, err => console.log(err.message));\r\n    }\r\n\r\n    sortByAbc = () => {\r\n        const moviesArr = []\r\n        db.collection('movies').orderBy('title').get()\r\n            .then((snapshot) => {\r\n                this.snapshotFunction(snapshot, moviesArr)\r\n            }, err => console.log(err.message));\r\n    }\r\n\r\n    sortByRating = () => {\r\n        const moviesArr = []\r\n        db.collection('movies').orderBy('imdbRate').get()\r\n            .then((snapshot) => {\r\n                this.snapshotFunction(snapshot, moviesArr)\r\n            }, err => console.log(err.message));\r\n    }\r\n\r\n    // updating data Firebase Firestore functions\r\n    getUpdatedData = () => {\r\n        const moviesArr = []\r\n        db.collection('movies').get()\r\n            .then((data) => {\r\n                data.docs.forEach(doc => {\r\n                    const film = doc.data()\r\n                    film.dbId = doc.id\r\n                    moviesArr.push(film)\r\n                })\r\n                this.setState({\r\n                    fetchedDatabase: moviesArr\r\n                })\r\n            }).catch(err => console.log(err.message))\r\n    }\r\n\r\n    deleteItem = (e) => {\r\n        let id = e.target.parentElement.parentElement.getAttribute('id');\r\n        db.collection(\"movies\").doc(id).delete()\r\n            .then(() => {\r\n                this.getUpdatedData()\r\n            })\r\n    }\r\n\r\n    addToFavorites = (e) => {\r\n        let id = e.target.parentElement.parentElement.getAttribute('id');\r\n        db.collection('movies').doc(id).update({\r\n            favorite: true\r\n        }).then(() => {\r\n            this.getUpdatedData()\r\n        })\r\n    }\r\n\r\n    render() {\r\n        // console.log(this.state.fetchedDatabase)\r\n        return (\r\n            <div className=\"watchlist p1 flex flexCenter\" id=\"mylist\">\r\n                <h1 id=\"watchlist\">Watchlist</h1>\r\n                <div className=\"listContainer\">\r\n                    <div className=\"buttons flex flexCenter\">\r\n                        <button onClick={this.sortByAbc} className=\"btnSort radius\">Sort A-Z</button>\r\n                        <button onClick={this.sortByRating} className=\"btnSort radius\">Sort by IMDB rating</button>\r\n                    </div>\r\n                    <ul className=\"list flex flexCenter\">\r\n                        {this.state.fetchedDatabase.map((movie) => (\r\n                            <li key={movie.dbId} id={movie.dbId} className=\"grid listItem\">\r\n                                <div className=\"titlesWrapper flex flexCenter\">\r\n                                    <h3>{movie.title}</h3>\r\n                                    <h5>Year: {movie.year}</h5>\r\n                                    <h5>Type: {movie.type}</h5>\r\n                                    <h5>Genre: {movie.genre}</h5>\r\n                                </div>\r\n                                <img src={movie.image} alt=\"film poster\" className=\"block listImage shadow\" />\r\n                                <div className=\"imdbWrapper flex\">\r\n                                    <h4>Imdb Rating: {movie.imdbRate}</h4>\r\n                                    <h5><a href={movie.imdbLink} rel=\"noopener noreferrer\" target=\"_blank\" className=\"imdbLink\">IMDB Link</a></h5>\r\n                                    <p className={movie.favorite ? 'star yellow' : 'star'} >&#10031;</p>\r\n                                </div>\r\n                                <div className=\"favWrapper flex flexCenter\">\r\n\r\n                                    <button onClick={this.addToFavorites} className=\"btnList addFav radius\" disabled={movie.favorite}>Add to favorites</button>\r\n                                    <button onClick={e =>\r\n                                        window.confirm(\"Are you sure you want to delete this item?\") &&\r\n                                        this.deleteItem(e)} className=\"btnList delete radius\">Delete</button>\r\n                                </div>\r\n                            </li>\r\n                        ))}\r\n                        <HashLink\r\n                            to=\"#watchlist\"\r\n                            scroll={el => el.scrollIntoView({ behavior: 'smooth', block: 'end' })}\r\n                            className=\"topLink hash radius\">Back To Top &nbsp; <FontAwesomeIcon icon={faHandPointUp} className=\"handIcon\" />\r\n                        </HashLink >\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MoviesList;","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport './App.css';\nimport Header from './components/layout/Header'\nimport SearchContainer from './components/search/SearchContainer/SearchContainer'\nimport MoviesList from './components/search/MoviesList/MoviesList'\n\n\nclass App extends React.Component {\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <div className=\"container\">\n            <Header />\n            <Route exact path='/' component={SearchContainer}>\n            </Route>\n            <Route path='/movies_list/' component={MoviesList}>\n            </Route>\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n    <Router>\n        <App />\n    </Router>\n    , document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}